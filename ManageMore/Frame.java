/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.cescoandtomas.managemore;
import java.awt.Component;
import java.awt.Container;
import java.awt.event.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;


/**
 *
 * @author franc
 */
public class Frame extends javax.swing.JFrame implements WindowListener {
    public static Connection con = null;
    public ArrayList<DisplayPanel> panels = new ArrayList<DisplayPanel>();
    
    /**
     * Creates new form Frame
     */
    
    public Frame() {
        
        
        
        
         
        initDataBase();
        initComponents();
        initTabs();
        
        
        
        
        
    }
    
    public static Connection getCon(){
        return con;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jButton4.setText("Vendors");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jButton1.setText("Delete");

        jButton2.setText("Update");

        jButton3.setText("Insert");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     @Override 
    public void windowClosing(WindowEvent e){
        //this method closes the connection when the x is pressed.
        try{
        con.close();
        } catch(Exception ex){
            ex.printStackTrace();
        }
        
    }
    //we dont need these, but to use the windowListener interface to close the JDBC connection, we need to implement them all.
     @Override 
    public void windowDeactivated(WindowEvent e){};
     @Override 
    public void windowActivated(WindowEvent e){};
     @Override 
    public void windowDeiconified(WindowEvent e){};
     @Override 
    public void windowIconified(WindowEvent e){};
     @Override 
    public void windowClosed(WindowEvent e){};
     @Override 
    public void windowOpened(WindowEvent e){};
    
    public void initDataBase(){
        //this function establishes the database connection, and assigns it to a static variable
            try{
              Class.forName("com.mysql.cj.jdbc.Driver");
                //MAY HAVE TO CHANGE WHEN PROJECT IS MOVED TO LAPTOP
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/managemore","root","password");
                //now the infopanels can use the connection to execute sql statements. Must close the connection when the application closes to prevent memory leaks
                
            }catch(Exception e){
                e.printStackTrace();
                
            }
        
        
    }
    
     public JTable getTable(String reqTable){
        //creates a jTable with the data from the sql table reqTable.
        //first, we retrieve the database data.
    //we are going to execute a query based on the parameter, get the resultset and put it into a JTable
    
    try{
        
        Statement st = Frame.getCon().createStatement(); 
        String query = "SELECT * FROM " + reqTable; 
        ResultSet rs = st.executeQuery(query); //the resultset holds the results of the query 
        ResultSetMetaData rsmd = rs.getMetaData(); // the metadata has info like how many columns and their names
        
        //we will gather the information we need to make a DefaultTableModel
        int cols = rsmd.getColumnCount();
        String[] names = new String[cols];
        for(int i = 1; i <= cols; i++){
            names[i-1] = rsmd.getColumnName(i);
            //System.out.println(names[i-1]);
        }
        
        //all of the column names are stored in names
        
        //each entry in resultset is a tuple from the table.
        //we have to fill the row with the tuple information
        ArrayList<Object[]> allRows = new ArrayList<Object[]>();
        while(rs.next()){
       
        Object[] row = new Object[cols];
        //have to start the index at 1, as 1 corresponds to column 1
            for(int i = 1; i <= cols; i++){
            //TODO: handling for BLOBS goes here
            row[i-1] = rs.getObject(i);
            System.out.println(rs.getString(i));
            }
            
            allRows.add(row);
            
        }   
        //we have the column names and data, we have to transform the arrayList into a 2d array
        Object[][] rows = new Object[allRows.size()][];
        
        allRows.toArray(rows);// turns the arrayList of object[] into a 2d array for the table model
        
        DefaultTableModel model = new DefaultTableModel(rows,names);
        //System.out.println(model.getDataVector().toString());
        JTable table = new JTable(model);
        
        
        return table;
       
        
    } catch(Exception e){
        e.printStackTrace();
        return null;
    }
   
 }
     public void updatePanel(DisplayPanel)
   
    public void initTabs(){
        //this function does alot.
        //First, we make all of the displayPanels. Then we read its corresponding table from the DB
        //then we add the panel to the tabbed pane.
        JTabbedPane pane = jTabbedPane2;
        DisplayPanel employee, facility, product,stock,vehicle,vendor;
        employee = new DisplayPanel(getTable("employee"));
        pane.addTab("Employees", employee);
        facility = new DisplayPanel(getTable("facility"));
        pane.addTab("Facilities", facility);
        product = new DisplayPanel(getTable("product"));
        pane.addTab("Products", product);
        stock = new DisplayPanel(getTable("stock"));
        pane.addTab("Stock", stock);
        vehicle = new DisplayPanel(getTable("vehicle"));
        pane.addTab("Vehicles", vehicle );
        vendor = new DisplayPanel(getTable("vendor"));
        pane.addTab("Vendors", vendor );
        
        //now we add all tabs to an array.
        //we need access to these panels so we can update the jTable when data changes.
        
        
    }
    
   
    
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            //set up initial frame
            JFrame f = new Frame();
            //the constructor initializes all of the side components attached to this JFrame.
              
            //all of these changes should be in the Frame constructor, however it displays incorrectly if these execute there
            f.setVisible(true); // makes it visible obvously
            f.setResizable(false); // we dont want the window to resize because it will break the view of the tables
            f.setTitle("ManageMore");
            f.setLocationRelativeTo(null);//makes the window in the center of the screen
            
            
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    // End of variables declaration//GEN-END:variables
}
